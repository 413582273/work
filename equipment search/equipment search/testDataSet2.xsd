<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="testDataSet2" targetNamespace="http://tempuri.org/testDataSet2.xsd" xmlns:mstns="http://tempuri.org/testDataSet2.xsd" xmlns="http://tempuri.org/testDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="testConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="testConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.equipment_search.Properties.Settings.GlobalReference.Default.testConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="equipmentTableAdapter" GeneratorDataComponentClassName="equipmentTableAdapter" Name="equipment" UserDataComponentName="equipmentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="testConnectionString (Settings)" DbObjectName="test.dbo.equipment" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[equipment] WHERE (([equipmentID] = @Original_equipmentID) AND ([equipmentName] = @Original_equipmentName) AND ([majorID] = @Original_majorID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_equipmentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="equipmentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_equipmentName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="equipmentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_majorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="majorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[equipment] ([equipmentName], [majorID]) VALUES (@equipmentName, @majorID);
SELECT equipmentID, equipmentName, majorID FROM equipment WHERE (equipmentID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@equipmentName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="equipmentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@majorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="majorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT equipmentID, equipmentName, majorID FROM dbo.equipment</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[equipment] SET [equipmentName] = @equipmentName, [majorID] = @majorID WHERE (([equipmentID] = @Original_equipmentID) AND ([equipmentName] = @Original_equipmentName) AND ([majorID] = @Original_majorID));
SELECT equipmentID, equipmentName, majorID FROM equipment WHERE (equipmentID = @equipmentID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@equipmentName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="equipmentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@majorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="majorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_equipmentID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="equipmentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_equipmentName" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="equipmentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_majorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="majorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="equipmentID" ColumnName="equipmentID" DataSourceName="test.dbo.equipment" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@equipmentID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="equipmentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="equipmentID" DataSetColumn="equipmentID" />
              <Mapping SourceColumn="equipmentName" DataSetColumn="equipmentName" />
              <Mapping SourceColumn="majorID" DataSetColumn="majorID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="loginTableAdapter" GeneratorDataComponentClassName="loginTableAdapter" Name="login" UserDataComponentName="loginTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="testConnectionString (Settings)" DbObjectName="test.dbo.login" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[login] ([name], [password]) VALUES (@name, @password)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@password" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT name, password FROM dbo.login</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="majorTableAdapter" GeneratorDataComponentClassName="majorTableAdapter" Name="major" UserDataComponentName="majorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="testConnectionString (Settings)" DbObjectName="test.dbo.major" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[major] WHERE (([majorID] = @Original_majorID) AND ([majorName] = @Original_majorName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_majorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="majorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_majorName" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="majorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[major] ([majorName]) VALUES (@majorName);
SELECT majorID, majorName FROM major WHERE (majorID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@majorName" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="majorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT majorID, majorName FROM dbo.major</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[major] SET [majorName] = @majorName WHERE (([majorID] = @Original_majorID) AND ([majorName] = @Original_majorName));
SELECT majorID, majorName FROM major WHERE (majorID = @majorID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@majorName" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="majorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_majorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="majorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_majorName" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="majorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="majorID" ColumnName="majorID" DataSourceName="test.dbo.major" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@majorID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="majorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="majorID" DataSetColumn="majorID" />
              <Mapping SourceColumn="majorName" DataSetColumn="majorName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="procurementInfoTableAdapter" GeneratorDataComponentClassName="procurementInfoTableAdapter" Name="procurementInfo" UserDataComponentName="procurementInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="testConnectionString (Settings)" DbObjectName="test.dbo.procurementInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[procurementInfo] WHERE (([Num] = @Original_Num) AND ([projectID] = @Original_projectID) AND ([vendorID] = @Original_vendorID) AND ([price] = @Original_price) AND ([amount] = @Original_amount))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Num" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Num" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_projectID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="projectID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_vendorID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="vendorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Original_price" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Original_amount" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[procurementInfo] ([projectID], [parameter], [vendorID], [price], [amount]) VALUES (@projectID, @parameter, @vendorID, @price, @amount);
SELECT Num, projectID, parameter, vendorID, price, amount FROM procurementInfo WHERE (Num = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@projectID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="projectID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@parameter" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="parameter" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@vendorID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="vendorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@price" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@amount" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Num, projectID, parameter, vendorID, price, amount FROM dbo.procurementInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[procurementInfo] SET [projectID] = @projectID, [parameter] = @parameter, [vendorID] = @vendorID, [price] = @price, [amount] = @amount WHERE (([Num] = @Original_Num) AND ([projectID] = @Original_projectID) AND ([vendorID] = @Original_vendorID) AND ([price] = @Original_price) AND ([amount] = @Original_amount));
SELECT Num, projectID, parameter, vendorID, price, amount FROM procurementInfo WHERE (Num = @Num)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@projectID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="projectID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@parameter" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="parameter" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@vendorID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="vendorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@price" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@amount" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Num" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Num" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_projectID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="projectID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_vendorID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="vendorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Original_price" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Original_amount" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Num" ColumnName="Num" DataSourceName="test.dbo.procurementInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Num" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Num" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Num" DataSetColumn="Num" />
              <Mapping SourceColumn="projectID" DataSetColumn="projectID" />
              <Mapping SourceColumn="parameter" DataSetColumn="parameter" />
              <Mapping SourceColumn="vendorID" DataSetColumn="vendorID" />
              <Mapping SourceColumn="price" DataSetColumn="price" />
              <Mapping SourceColumn="amount" DataSetColumn="amount" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="projectInfoTableAdapter" GeneratorDataComponentClassName="projectInfoTableAdapter" Name="projectInfo" UserDataComponentName="projectInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="testConnectionString (Settings)" DbObjectName="test.dbo.projectInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[projectInfo] WHERE (([projectID] = @Original_projectID) AND ([projectName] = @Original_projectName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_projectID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="projectID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_projectName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="projectName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[projectInfo] ([projectName]) VALUES (@projectName);
SELECT projectID, projectName FROM projectInfo WHERE (projectID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@projectName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="projectName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT projectID, projectName FROM dbo.projectInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[projectInfo] SET [projectName] = @projectName WHERE (([projectID] = @Original_projectID) AND ([projectName] = @Original_projectName));
SELECT projectID, projectName FROM projectInfo WHERE (projectID = @projectID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@projectName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="projectName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_projectID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="projectID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_projectName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="projectName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="projectID" ColumnName="projectID" DataSourceName="test.dbo.projectInfo" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@projectID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="projectID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="projectID" DataSetColumn="projectID" />
              <Mapping SourceColumn="projectName" DataSetColumn="projectName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="vendorTableAdapter" GeneratorDataComponentClassName="vendorTableAdapter" Name="vendor" UserDataComponentName="vendorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="testConnectionString (Settings)" DbObjectName="test.dbo.vendor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[vendor] WHERE (([vendorID] = @Original_vendorID) AND ([vendorName] = @Original_vendorName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_vendorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="vendorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_vendorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="vendorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[vendor] ([vendorName]) VALUES (@vendorName);
SELECT vendorID, vendorName FROM vendor WHERE (vendorID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@vendorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="vendorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT vendorID, vendorName FROM dbo.vendor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[vendor] SET [vendorName] = @vendorName WHERE (([vendorID] = @Original_vendorID) AND ([vendorName] = @Original_vendorName));
SELECT vendorID, vendorName FROM vendor WHERE (vendorID = @vendorID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@vendorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="vendorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_vendorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="vendorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_vendorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="vendorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="vendorID" ColumnName="vendorID" DataSourceName="test.dbo.vendor" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@vendorID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="vendorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="vendorID" DataSetColumn="vendorID" />
              <Mapping SourceColumn="vendorName" DataSetColumn="vendorName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="testDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="testDataSet2" msprop:Generator_UserDSName="testDataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="equipment" msprop:Generator_TableClassName="equipmentDataTable" msprop:Generator_TableVarName="tableequipment" msprop:Generator_TablePropName="equipment" msprop:Generator_RowDeletingName="equipmentRowDeleting" msprop:Generator_RowChangingName="equipmentRowChanging" msprop:Generator_RowEvHandlerName="equipmentRowChangeEventHandler" msprop:Generator_RowDeletedName="equipmentRowDeleted" msprop:Generator_UserTableName="equipment" msprop:Generator_RowChangedName="equipmentRowChanged" msprop:Generator_RowEvArgName="equipmentRowChangeEvent" msprop:Generator_RowClassName="equipmentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="equipmentID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnequipmentID" msprop:Generator_ColumnPropNameInRow="equipmentID" msprop:Generator_ColumnPropNameInTable="equipmentIDColumn" msprop:Generator_UserColumnName="equipmentID" type="xs:int" />
              <xs:element name="equipmentName" msprop:Generator_ColumnVarNameInTable="columnequipmentName" msprop:Generator_ColumnPropNameInRow="equipmentName" msprop:Generator_ColumnPropNameInTable="equipmentNameColumn" msprop:Generator_UserColumnName="equipmentName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="majorID" msprop:Generator_ColumnVarNameInTable="columnmajorID" msprop:Generator_ColumnPropNameInRow="majorID" msprop:Generator_ColumnPropNameInTable="majorIDColumn" msprop:Generator_UserColumnName="majorID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="login" msprop:Generator_TableClassName="loginDataTable" msprop:Generator_TableVarName="tablelogin" msprop:Generator_TablePropName="login" msprop:Generator_RowDeletingName="loginRowDeleting" msprop:Generator_RowChangingName="loginRowChanging" msprop:Generator_RowEvHandlerName="loginRowChangeEventHandler" msprop:Generator_RowDeletedName="loginRowDeleted" msprop:Generator_UserTableName="login" msprop:Generator_RowChangedName="loginRowChanged" msprop:Generator_RowEvArgName="loginRowChangeEvent" msprop:Generator_RowClassName="loginRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="major" msprop:Generator_TableClassName="majorDataTable" msprop:Generator_TableVarName="tablemajor" msprop:Generator_TablePropName="major" msprop:Generator_RowDeletingName="majorRowDeleting" msprop:Generator_RowChangingName="majorRowChanging" msprop:Generator_RowEvHandlerName="majorRowChangeEventHandler" msprop:Generator_RowDeletedName="majorRowDeleted" msprop:Generator_UserTableName="major" msprop:Generator_RowChangedName="majorRowChanged" msprop:Generator_RowEvArgName="majorRowChangeEvent" msprop:Generator_RowClassName="majorRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="majorID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnmajorID" msprop:Generator_ColumnPropNameInRow="majorID" msprop:Generator_ColumnPropNameInTable="majorIDColumn" msprop:Generator_UserColumnName="majorID" type="xs:int" />
              <xs:element name="majorName" msprop:Generator_ColumnVarNameInTable="columnmajorName" msprop:Generator_ColumnPropNameInRow="majorName" msprop:Generator_ColumnPropNameInTable="majorNameColumn" msprop:Generator_UserColumnName="majorName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="procurementInfo" msprop:Generator_TableClassName="procurementInfoDataTable" msprop:Generator_TableVarName="tableprocurementInfo" msprop:Generator_TablePropName="procurementInfo" msprop:Generator_RowDeletingName="procurementInfoRowDeleting" msprop:Generator_RowChangingName="procurementInfoRowChanging" msprop:Generator_RowEvHandlerName="procurementInfoRowChangeEventHandler" msprop:Generator_RowDeletedName="procurementInfoRowDeleted" msprop:Generator_UserTableName="procurementInfo" msprop:Generator_RowChangedName="procurementInfoRowChanged" msprop:Generator_RowEvArgName="procurementInfoRowChangeEvent" msprop:Generator_RowClassName="procurementInfoRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Num" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnNum" msprop:Generator_ColumnPropNameInRow="Num" msprop:Generator_ColumnPropNameInTable="NumColumn" msprop:Generator_UserColumnName="Num" type="xs:int" />
              <xs:element name="projectID" msprop:Generator_ColumnVarNameInTable="columnprojectID" msprop:Generator_ColumnPropNameInRow="projectID" msprop:Generator_ColumnPropNameInTable="projectIDColumn" msprop:Generator_UserColumnName="projectID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="parameter" msprop:Generator_ColumnVarNameInTable="columnparameter" msprop:Generator_ColumnPropNameInRow="parameter" msprop:Generator_ColumnPropNameInTable="parameterColumn" msprop:Generator_UserColumnName="parameter">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="vendorID" msprop:Generator_ColumnVarNameInTable="columnvendorID" msprop:Generator_ColumnPropNameInRow="vendorID" msprop:Generator_ColumnPropNameInTable="vendorIDColumn" msprop:Generator_UserColumnName="vendorID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="price" msprop:Generator_ColumnVarNameInTable="columnprice" msprop:Generator_ColumnPropNameInRow="price" msprop:Generator_ColumnPropNameInTable="priceColumn" msprop:Generator_UserColumnName="price" type="xs:float" />
              <xs:element name="amount" msprop:Generator_ColumnVarNameInTable="columnamount" msprop:Generator_ColumnPropNameInRow="amount" msprop:Generator_ColumnPropNameInTable="amountColumn" msprop:Generator_UserColumnName="amount" type="xs:float" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="projectInfo" msprop:Generator_TableClassName="projectInfoDataTable" msprop:Generator_TableVarName="tableprojectInfo" msprop:Generator_TablePropName="projectInfo" msprop:Generator_RowDeletingName="projectInfoRowDeleting" msprop:Generator_RowChangingName="projectInfoRowChanging" msprop:Generator_RowEvHandlerName="projectInfoRowChangeEventHandler" msprop:Generator_RowDeletedName="projectInfoRowDeleted" msprop:Generator_UserTableName="projectInfo" msprop:Generator_RowChangedName="projectInfoRowChanged" msprop:Generator_RowEvArgName="projectInfoRowChangeEvent" msprop:Generator_RowClassName="projectInfoRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="projectID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnprojectID" msprop:Generator_ColumnPropNameInRow="projectID" msprop:Generator_ColumnPropNameInTable="projectIDColumn" msprop:Generator_UserColumnName="projectID" type="xs:int" />
              <xs:element name="projectName" msprop:Generator_ColumnVarNameInTable="columnprojectName" msprop:Generator_ColumnPropNameInRow="projectName" msprop:Generator_ColumnPropNameInTable="projectNameColumn" msprop:Generator_UserColumnName="projectName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="vendor" msprop:Generator_TableClassName="vendorDataTable" msprop:Generator_TableVarName="tablevendor" msprop:Generator_TablePropName="vendor" msprop:Generator_RowDeletingName="vendorRowDeleting" msprop:Generator_RowChangingName="vendorRowChanging" msprop:Generator_RowEvHandlerName="vendorRowChangeEventHandler" msprop:Generator_RowDeletedName="vendorRowDeleted" msprop:Generator_UserTableName="vendor" msprop:Generator_RowChangedName="vendorRowChanged" msprop:Generator_RowEvArgName="vendorRowChangeEvent" msprop:Generator_RowClassName="vendorRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="vendorID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnvendorID" msprop:Generator_ColumnPropNameInRow="vendorID" msprop:Generator_ColumnPropNameInTable="vendorIDColumn" msprop:Generator_UserColumnName="vendorID" type="xs:int" />
              <xs:element name="vendorName" msprop:Generator_ColumnVarNameInTable="columnvendorName" msprop:Generator_ColumnPropNameInRow="vendorName" msprop:Generator_ColumnPropNameInTable="vendorNameColumn" msprop:Generator_UserColumnName="vendorName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:equipment" />
      <xs:field xpath="mstns:equipmentID" />
    </xs:unique>
    <xs:unique name="major_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:major" />
      <xs:field xpath="mstns:majorID" />
    </xs:unique>
    <xs:unique name="procurementInfo_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:procurementInfo" />
      <xs:field xpath="mstns:Num" />
    </xs:unique>
    <xs:unique name="projectInfo_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:projectInfo" />
      <xs:field xpath="mstns:projectID" />
    </xs:unique>
    <xs:unique name="vendor_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:vendor" />
      <xs:field xpath="mstns:vendorID" />
    </xs:unique>
  </xs:element>
</xs:schema>